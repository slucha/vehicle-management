<?php

namespace VehicleManagement\ManagementBundle\Entity;

use Symfony\Component\Validator\Constraints\Date;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * RefuelRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RefuelRepository extends EntityRepository {

	public function getObjects($nbRefuelPerPage, $offset,$user) {
		$qb = $this->createQueryBuilder('r')
					->leftJoin('r.vehicle', 'v')
					->where('v.user = :user')
					->setParameter('user', $user)
					->addSelect('v')
					->orderBy('r.date','DESC')
					->setFirstResult($offset)
					->setMaxResults($nbRefuelPerPage);
		
		return $qb->getQuery()
					->getResult();
	}
	
	public function getTotal($user) {
		$qb = $this->createQueryBuilder('r')
					->select('COUNT(r)')
					->leftJoin('r.vehicle','v')
					->where('v.user = :user')
					->setParameter('user', $user);
		
		return (int) $qb->getQuery()
						->getSingleScalarResult();
	}
	
	public function getRefuelCostPerMonth($user,$year) {
		$rsm = new ResultSetMapping();
		// mapping results to the message entity
		$rsm->addEntityResult('VehicleManagement\ManagementBundle\Entity\Refuel', 'r');
		$rsm->addFieldResult('r', 'id', 'id');
		$rsm->addFieldResult('r', 'date', 'date');
		$rsm->addFieldResult('r', 'price', 'price');
		
		$dql = "SELECT r.id,r.date,SUM(price) as price
					FROM  refuel r
					LEFT JOIN vehicle v ON r.vehicle_id=v.id
					WHERE YEAR(r.date) = ?
					AND v.user_id = ?
					GROUP BY MONTH(r.date)";
		return $this->_em->createNativeQuery($dql,$rsm)
						->setParameter(1, $year)
						->setParameter(2, $user->getId())
						->getResult();
	}
}